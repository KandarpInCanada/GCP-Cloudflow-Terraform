name: Terraform Setup, Build, Push to GAR, and Deploy GKE

on:
  push:
    branches:
      - main

jobs:
  terraform-setup:
    name: "Setup Infrastructure with Terraform"
    runs-on: ubuntu-latest

    steps:
      # ✅ Step 1: Checkout Code
      - name: Checkout Code
        uses: actions/checkout@v3

      # ✅ Step 2: Setup Google Cloud Credentials
      - name: Setup Google Cloud Credentials
        run: echo '${{ secrets.GCP_SA_KEY }}' > $HOME/gcp-sa-key.json

      # ✅ Step 3: Authenticate with Google Cloud
      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      # ✅ Step 4: Setup Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.6.0

      # ✅ Step 5: Initialize Terraform
      - name: Terraform Init
        run: |
          cd terraform
          terraform init -backend-config="bucket=${{ secrets.TF_BUCKET }}"
        env:
          GOOGLE_APPLICATION_CREDENTIALS: $HOME/gcp-sa-key.json

      # ✅ Step 6: Import Existing GKE Cluster (if it exists)
      - name: Import Existing GKE Cluster
        run: |
          cd terraform
          terraform import google_container_cluster.primary projects/${{ secrets.PROJECT_ID }}/zones/us-central1-a/clusters/myapp-gke-cluster || true
        env:
          GOOGLE_APPLICATION_CREDENTIALS: $HOME/gcp-sa-key.json
        continue-on-error: true  # Ignore errors if the cluster does not exist

      # ✅ Step 7: Import Existing Artifact Registry Repository (if it exists)
      - name: Import Existing Artifact Registry Repository
        run: |
          cd terraform
          terraform import google_artifact_registry_repository.myapp_repo projects/${{ secrets.PROJECT_ID }}/locations/us-central1/repositories/myapp-repo || true
        env:
          GOOGLE_APPLICATION_CREDENTIALS: $HOME/gcp-sa-key.json
        continue-on-error: true  # Ignore errors if the repository does not exist

      # ✅ Step 8: Terraform Plan (Only on Pull Requests)
      - name: Terraform Plan
        if: github.event_name == 'pull_request'
        run: |
          cd terraform
          terraform plan -no-color -input=false
        continue-on-error: true

      # ✅ Step 9: Apply Terraform (Only on Push to Main Branch)
      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: |
          cd terraform
          terraform apply -auto-approve -input=false
        env:
          GOOGLE_APPLICATION_CREDENTIALS: $HOME/gcp-sa-key.json

  build-push:
    name: "Build & Push Docker Images"
    needs: terraform-setup  # ✅ Runs only after Terraform completes
    runs-on: ubuntu-latest

    steps:
      # ✅ Step 1: Checkout Code
      - name: Checkout Code
        uses: actions/checkout@v3

      # ✅ Step 2: Authenticate with Google Cloud
      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      # ✅ Step 3: Configure Docker for Google Artifact Registry
      - name: Configure Docker for GAR
        run: |
          gcloud auth configure-docker us-central1-docker.pkg.dev

      # ✅ Step 4: Build Validator API Docker Image
      - name: Build Validator API Docker Image
        run: |
          docker build -t us-central1-docker.pkg.dev/${{ secrets.PROJECT_ID }}/myapp-repo/validator-api:$GITHUB_SHA -f Dockerfile.validator .

      # ✅ Step 5: Push Validator API Docker Image
      - name: Push Validator API Docker Image
        run: |
          docker push us-central1-docker.pkg.dev/${{ secrets.PROJECT_ID }}/myapp-repo/validator-api:$GITHUB_SHA

      # ✅ Step 6: Build Processor API Docker Image
      - name: Build Processor API Docker Image
        run: |
          docker build -t us-central1-docker.pkg.dev/${{ secrets.PROJECT_ID }}/myapp-repo/processor-api:$GITHUB_SHA -f Dockerfile.processor .

      # ✅ Step 7: Push Processor API Docker Image
      - name: Push Processor API Docker Image
        run: |
          docker push us-central1-docker.pkg.dev/${{ secrets.PROJECT_ID }}/myapp-repo/processor-api:$GITHUB_SHA

  deploy-gke:
    name: "Deploy to GKE"
    needs: build-push  # ✅ Runs only after Docker images are pushed
    runs-on: ubuntu-latest

    steps:
      # ✅ Step 1: Checkout Code
      - name: Checkout Code
        uses: actions/checkout@v3

      # ✅ Step 2: Authenticate with Google Cloud
      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      # ✅ Step 3: Connect to GKE Cluster
      - name: Get GKE Credentials
        run: |
          gcloud container clusters get-credentials myapp-gke-cluster --region us-central1

      # ✅ Step 4: Update Kubernetes Deployments
      - name: Update Kubernetes Deployments
        run: |
          kubectl set image deployment/validator-api validator-api=us-central1-docker.pkg.dev/${{ secrets.PROJECT_ID }}/myapp-repo/validator-api:$GITHUB_SHA
          kubectl set image deployment/processor-api processor-api=us-central1-docker.pkg.dev/${{ secrets.PROJECT_ID }}/myapp-repo/processor-api:$GITHUB_SHA